version: "3.7"

services:
  proxy:
    container_name: proxy
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    restart: "unless-stopped"
    networks:
      - backend

  server:
    container_name: server
    build:
      context: ./
      dockerfile: Dockerfile.prod
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: pg
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: dev
    volumes:
      - ./:/app
      - /app/node_modules
    restart: "unless-stopped"
    networks:
      - backend
    links:
      - pg
    depends_on:
      - pg

  pg:
    container_name: pg
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    networks:
      - backend

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - pg
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
